[{"/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/index.js":"1","/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/reportWebVitals.js":"2","/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/containers/App.js":"3","/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/utils/useUserContext.js":"4","/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/containers/pages/Edit.js":"5","/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/containers/pages/Home.js":"6","/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/containers/pages/Sheets.js":"7","/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/components/NavBar.js":"8","/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/components/Sheet.js":"9","/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/components/Input.js":"10","/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/components/Button.js":"11","/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/components/Cell.js":"12","/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/utils/romanize.js":"13","/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/components/InvisibleInput.js":"14"},{"size":620,"mtime":1609536265729,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1609536265729,"results":"17","hashOfConfig":"16"},{"size":780,"mtime":1609536265728,"results":"18","hashOfConfig":"16"},{"size":681,"mtime":1609536265730,"results":"19","hashOfConfig":"16"},{"size":333,"mtime":1609536265728,"results":"20","hashOfConfig":"16"},{"size":2496,"mtime":1609536265728,"results":"21","hashOfConfig":"16"},{"size":1398,"mtime":1609536265729,"results":"22","hashOfConfig":"16"},{"size":1165,"mtime":1609536265727,"results":"23","hashOfConfig":"16"},{"size":4037,"mtime":1609537647414,"results":"24","hashOfConfig":"16"},{"size":157,"mtime":1609536265727,"results":"25","hashOfConfig":"16"},{"size":518,"mtime":1609536265727,"results":"26","hashOfConfig":"16"},{"size":2018,"mtime":1609537547088,"results":"27","hashOfConfig":"16"},{"size":645,"mtime":1609536265730,"results":"28","hashOfConfig":"16"},{"size":221,"mtime":1609536265727,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"n80bxt",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/index.js",[],["60","61"],"/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/reportWebVitals.js",[],"/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/containers/App.js",[],"/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/utils/useUserContext.js",[],"/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/containers/pages/Edit.js",[],"/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/containers/pages/Home.js",[],"/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/containers/pages/Sheets.js",[],"/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/components/NavBar.js",[],"/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/components/Sheet.js",["62"],"import { useRef, useState } from 'react'\nimport { useWindowSize } from 'react-use'\nimport styled from 'styled-components'\nimport { TEST_SHEETS } from '../containers/pages/Sheets'\nimport romanize from '../utils/romanize'\nimport Cell, { DEFAULT_CELL_HEIGHT, DEFAULT_CELL_WIDTH } from './Cell'\nimport InvisibleInput from './InvisibleInput'\n\nconst TEST_SHEET_CELLS = [\n  { row: 1, col: 1, data: '123123' },\n  { row: 2, col: 1, data: '1235123' },\n  { row: 3, col: 1, data: '123123' },\n  { row: 1, col: 2, data: '13253123' },\n  { row: 1, col: 3, data: '123123' },\n  { row: 2, col: 4, data: '123123' },\n  { row: 5, col: 5, data: '1231231' },\n  { row: 1, col: 6, data: '1231223' },\n  { row: 7, col: 3, data: '1263123' },\n  { row: 9, col: 1, data: '1232123' }\n]\n\nconst SheetWrapper = styled.div`\n  font-size: 0.7em;\n`\n\nconst SheetMetaForm = styled.div`\n  position: sticky;\n  top: 60px;\n`\n\nconst SheetTitle = styled.h1`\n  background: #393e46;\n  color: #eeeeee;\n  padding: 5px;\n`\n\nconst EnterField = styled.div`\n  background: #eee;\n  display: block;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  font-size: 1rem;\n  padding: 5px;\n\n  &::before {\n    content: '=';\n    margin-right: 5px;\n  }\n`\n\nconst SheetContainer = styled.div`\n  overflow: auto;\n`\n\nconst SheetRow = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\nconst getCellData = (r, c) =>\n  TEST_SHEET_CELLS.find((tsc) => tsc.row === r && tsc.col === c) || undefined\n\nconst setupCells = (\n  rowCount,\n  colCount,\n  setCellData,\n) => {\n  const cells = []\n\n  for (let i = 0; i < rowCount; i++) {\n    const row = []\n\n    for (let j = 0; j < colCount; j++) {\n      let cell\n\n      if (i === 0)\n        cell = (\n          <Cell\n            key={'cell' + i + j}\n            isIndicator={true}\n            location={i + ' ' + j}\n            setCellData={setCellData}\n            data={j !== 0 && romanize(j)}\n          />\n        )\n      else if (j === 0)\n        cell = (\n          <Cell\n            key={'cell' + i + j}\n            isIndicator={true}\n            location={i + ' ' + j}\n            setCellData={setCellData}\n            data={i}\n          />\n        )\n      else {\n        const cellData = getCellData(i, j)\n\n        cell = (\n          <Cell\n            key={'cell' + i + j}\n            location={i + ' ' + j}\n            setCellData={setCellData}\n            data={cellData ? cellData.data : ''}\n          />\n        )\n      }\n\n      row.push(cell)\n    }\n\n    cells.push(row)\n  }\n\n  return cells\n}\n\nconst Sheet = ({ id }) => {\n  const scrollRef = useRef(null)\n\n  const [isEditing, setIsEditing] = useState(false)\n\n  const { width, height } = useWindowSize()\n\n  const { name } = TEST_SHEETS.find((s) => s.id === id)\n\n  const rowCount = Math.ceil(height / DEFAULT_CELL_HEIGHT)\n  const colCount = Math.ceil(width / DEFAULT_CELL_WIDTH)\n\n  const handleSheetRename = (e) => {\n    setIsEditing(false)\n    TEST_SHEETS.find((ts) => ts.id === id).name = e.target.value\n  }\n\n  const setCellData = (location, data) => {\n    const [r, c] = location.split(' ').map((v) => parseInt(v, 10))\n    const cell = getCellData(r, c)\n    if (cell) {\n      cell.data = data\n    } else {\n      TEST_SHEET_CELLS.push({\n        row: r,\n        col: c,\n        data\n      })\n    }\n  }\n\n  const cells = setupCells(\n    rowCount,\n    colCount,\n    setCellData,\n  )\n\n  return (\n    <SheetWrapper>\n      <SheetMetaForm>\n        <SheetTitle onDoubleClick={() => setIsEditing(true)}>\n          {isEditing ? (\n            <InvisibleInput\n              defaultValue={name}\n              onKeyPress={(e) => {\n                if (e.key === 'Enter') handleSheetRename(e)\n              }}\n              onBlur={handleSheetRename}\n            />\n          ) : (\n              name\n            )}\n        </SheetTitle>\n      </SheetMetaForm>\n      <SheetContainer ref={scrollRef}>\n        {cells.map((row, i) => (\n          <SheetRow key={'sheetrow' + i}>{row}</SheetRow>\n        ))}\n      </SheetContainer>\n    </SheetWrapper>\n  )\n}\n\nexport default Sheet\n","/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/components/Input.js",[],"/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/components/Button.js",[],"/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/components/Cell.js",[],"/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/utils/romanize.js",[],"/Users/ianhuang/Desktop/desktop/projects/bullsheets/src/components/InvisibleInput.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":37,"column":7,"nodeType":"69","messageId":"70","endLine":37,"endColumn":17},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'EnterField' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]